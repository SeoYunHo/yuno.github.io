---
layout: post
title: 프론트엔드 모던 프레임워크 낱낱히 파헤치기
date: 2017-12-03
excerpt: "2017DevFest 강의를 정리한 내용입니다."
tags: [js, post, react, angular, vue]
comments: true
---

이 글 DevFest의 한성민님의 발표를 정리한 글입니다.


## 오늘날의 프론트엔드

현재 frontend 로드맵을 보기에는 다음과 같이 너무 복잡합니다ㅠㅠ

현재 프론트에서의 중요 키워드는 다음과 같습니다.
 
1. 동적 렌더링
2. 모듈링/번들링
3. 타이핑
4. 테스트 자동화

프론트엔드에는 위의 것들을 지원하는 많은 도구들이있습니다.

하지만 이러한 도구들을 사용하기에는 상당히 어려웠습니다.

그러다 프레임워크가 나오게 되었고, 프레임워크는 이를 쉽게 만들어 주었습니다.

### 프레임워크

angular - 완전하고 빠름, 진입장벽 높음
react - 활발함 파편화 되어 있어서 의존과 버전에 민감, 라이브러리 자체로는 부족
vue - 가볍고 진입장벽 낮음, 프로젝트가 커질수록 안좋아짐

## 프레임워크 톺아보기

angular는 view와 viewmodel이 서로 분리합니다.

react는 view와 viewmodel이 하나의 class에 속해있다.

vue는 react와 angular의 장점들을 모아놓은 것이라고 생각

## 트랜드

리액트가 대중적임(angularJS angular를 포함하면 angular가 1등)

## 진입장벽

진입장벽은 vue가 제일 낮음 -> angularJS를 사용한다면 권장

angular는 높음 -> 진입전 타 프레임워크 경험 권장

react는 라이프 사이클과 상태 관리가 어려움

## 성능

1. 나무털기 (angular react vue 지원)

빌드 단계에서 사용하지 않는 모듈을 제외시키는 방식

2. AOT (angular만 지원)

react와 vue의 JIT 컴파일 방식과는 다르게 브라우저에 부담 최소화 (조금더 조사 필요)

3. virtualDOM (react vue 지원)

변경사항을 논리적인 DOM에서 먼저 감지한 후 실제 DOM의 업데이트를 최소화하여 성능 향상

### 결론 : angular 최적화가 안되어있다면 vue가 제일 빠름

## 구성 요소

- 모듈 구성

(react만 알아들음)

- 템플릿

템플릿은 react는 제공하지 않고, vue에 비해서 angular가 좀더 체계적임 (2way와 1way가 나누어짐)

- 변화감지

angular -> ChangeDetection

react -> Props / State, Reconciliation, React Fiber(아직 베타??)

vue -> Watcher VirtualDOM (based Snabdom)

 (조금더 조사..)

- 오픈 소스

react, angular, vue마다 여러개의 오픈 소스가 있음

- 실무자의 Tip(시간이 없어서 빠르게 넘어감 ppt가 더 자세할 듯)